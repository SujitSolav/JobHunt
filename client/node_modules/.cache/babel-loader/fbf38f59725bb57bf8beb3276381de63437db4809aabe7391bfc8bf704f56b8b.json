{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sujit Solav\\\\Desktop\\\\MERN Projects\\\\JobHunt\\\\client\\\\src\\\\Componants\\\\JobHome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './JobHome.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobHome() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [appliedJobs, setAppliedJobs] = useState(new Set()); // To track applied jobs\n  const applicantId = localStorage.getItem('id'); // Replace this with the actual applicant ID\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:3002/api/admin/getAllJobsForUser');\n        setJobs(response.data.jobs);\n      } catch (error) {\n        toast.error('Error fetching jobs');\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleApply = async (jobId, status = 'Pending') => {\n    // `applicantId` should be retrieved from your application's state or context\n    const applicantId = localStorage.getItem('id'); // Example of retrieving applicantId from localStorage\n\n    try {\n      const response = await axios.post(`http://127.0.0.1:3002/api/user/apply/${jobId}`, {\n        applicantId,\n        status\n      });\n      if (response.status === 200) {\n        setAppliedJobs(prev => new Set(prev).add(jobId));\n        toast.success('Applied successfully');\n      } else {\n        toast.error(response.data.message || 'Error applying for job');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error applying for job');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"job-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.requirements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `apply-button ${appliedJobs.has(job._id) ? 'applied' : ''}`,\n            onClick: () => handleApply(job._id),\n            disabled: appliedJobs.has(job._id) // Disable button if already applied\n            ,\n            children: appliedJobs.has(job._id) ? 'Applied' : 'Apply for this Job'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(JobHome, \"vS8euORxE3Dft79xXk7C/rqK/yA=\");\n_c = JobHome;\nexport default JobHome;\nvar _c;\n$RefreshReg$(_c, \"JobHome\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","Toaster","jsxDEV","_jsxDEV","JobHome","_s","jobs","setJobs","appliedJobs","setAppliedJobs","Set","applicantId","localStorage","getItem","fetchJobs","response","get","data","error","handleApply","jobId","status","post","prev","add","success","message","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","title","position","company","requirements","has","_id","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sujit Solav/Desktop/MERN Projects/JobHunt/client/src/Componants/JobHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './JobHome.css';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction JobHome() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [appliedJobs, setAppliedJobs] = useState(new Set()); // To track applied jobs\r\n  const applicantId = localStorage.getItem('id'); // Replace this with the actual applicant ID\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:3002/api/admin/getAllJobsForUser');\r\n        setJobs(response.data.jobs); \r\n      } catch (error) {\r\n        toast.error('Error fetching jobs');\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleApply = async (jobId, status = 'Pending') => {\r\n    // `applicantId` should be retrieved from your application's state or context\r\n    const applicantId = localStorage.getItem('id'); // Example of retrieving applicantId from localStorage\r\n  \r\n    try {\r\n      const response = await axios.post(`http://127.0.0.1:3002/api/user/apply/${jobId}`, { applicantId, status });\r\n      \r\n      if (response.status === 200) {\r\n        setAppliedJobs((prev) => new Set(prev).add(jobId));\r\n        toast.success('Applied successfully');\r\n      } else {\r\n        toast.error(response.data.message || 'Error applying for job');\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Error applying for job');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"content\">\r\n        <h1>Job Listings</h1>\r\n        <ul>\r\n          {jobs.map((job) => (\r\n            <li key={job._id} className=\"job-item\">\r\n              <h2>{job.title}</h2>\r\n              <p>{job.position}</p>\r\n              <p>{job.company}</p>\r\n              <p>{job.requirements}</p>\r\n              <button\r\n                className={`apply-button ${appliedJobs.has(job._id) ? 'applied' : ''}`}\r\n                onClick={() => handleApply(job._id)}\r\n                disabled={appliedJobs.has(job._id)} // Disable button if already applied\r\n              >\r\n                {appliedJobs.has(job._id) ? 'Applied' : 'Apply for this Job'}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </main>\r\n      <Toaster /> {/* This will render toast notifications */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobHome;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mDAAmD,CAAC;QACrFT,OAAO,CAACQ,QAAQ,CAACE,IAAI,CAACX,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdlB,KAAK,CAACkB,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,GAAG,SAAS,KAAK;IACvD;IACA,MAAMV,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhD,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMhB,KAAK,CAACuB,IAAI,CAAC,wCAAwCF,KAAK,EAAE,EAAE;QAAET,WAAW;QAAEU;MAAO,CAAC,CAAC;MAE3G,IAAIN,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAC3BZ,cAAc,CAAEc,IAAI,IAAK,IAAIb,GAAG,CAACa,IAAI,CAAC,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC;QAClDpB,KAAK,CAACyB,OAAO,CAAC,sBAAsB,CAAC;MACvC,CAAC,MAAM;QACLzB,KAAK,CAACkB,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACS,OAAO,IAAI,wBAAwB,CAAC;MAChE;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MAAA,IAAAS,eAAA,EAAAC,oBAAA;MACd5B,KAAK,CAACkB,KAAK,CAAC,EAAAS,eAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBF,OAAO,KAAI,wBAAwB,CAAC;IACxE;EACF,CAAC;EAGD,oBACEvB,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3B,OAAA;MAAM0B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACvB3B,OAAA;QAAA2B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB/B,OAAA;QAAA2B,QAAA,EACGxB,IAAI,CAAC6B,GAAG,CAAEC,GAAG,iBACZjC,OAAA;UAAkB0B,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACpC3B,OAAA;YAAA2B,QAAA,EAAKM,GAAG,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB/B,OAAA;YAAA2B,QAAA,EAAIM,GAAG,CAACE;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB/B,OAAA;YAAA2B,QAAA,EAAIM,GAAG,CAACG;UAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB/B,OAAA;YAAA2B,QAAA,EAAIM,GAAG,CAACI;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB/B,OAAA;YACE0B,SAAS,EAAE,gBAAgBrB,WAAW,CAACiC,GAAG,CAACL,GAAG,CAACM,GAAG,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;YACvEC,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAACiB,GAAG,CAACM,GAAG,CAAE;YACpCE,QAAQ,EAAEpC,WAAW,CAACiC,GAAG,CAACL,GAAG,CAACM,GAAG,CAAE,CAAC;YAAA;YAAAZ,QAAA,EAEnCtB,WAAW,CAACiC,GAAG,CAACL,GAAG,CAACM,GAAG,CAAC,GAAG,SAAS,GAAG;UAAoB;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA,GAXFE,GAAG,CAACM,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACP/B,OAAA,CAACF,OAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC7B,EAAA,CA9DQD,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAgEhB,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}